#!/usr/bin/env python3
# MIT License
#
# Copyright (c) 2017 Ricardo Velhote
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
import time
import os
import gi
import signal
import cryptocurrency
import interface
import logging

gi.require_version('Gtk', '3.0')
from gi.repository import Gtk as gtk

logger = logging.getLogger('indicator_bitcoin')
logger.setLevel(logging.DEBUG)

fh = logging.FileHandler('indicator.log')
fh.setLevel(logging.DEBUG)

ch = logging.StreamHandler()
ch.setLevel(logging.ERROR)

formatter = logging.Formatter('%(levelname)s:%(asctime)s:%(name)s:%(message)s')
ch.setFormatter(formatter)
fh.setFormatter(formatter)

logger.addHandler(ch)
logger.addHandler(fh)

if __name__ == "__main__":
    autostart = interface.MenuItemAutostart.is_autostart_set()
    iconpath = os.path.abspath(os.path.dirname(__file__)) + '/icons/bitcoin.svg'

    menu = interface.Menu([
        interface.MenuItemLastUpdated(time.strftime('%Y-%m-%d %H:%M:%S')),
        interface.MenuItemAutostart("Autostart", autostart),
        interface.MenuItemQuit("Quit")
    ])
    indicator = interface.Indicator("Bitcoin Indicator", iconpath, menu)

    btc = cryptocurrency.CryptoCurrency("bitcoin", "usd")
    interface.QueryLoop(indicator, btc).start()

    signal.signal(signal.SIGINT, signal.SIG_DFL)
    gtk.main()
